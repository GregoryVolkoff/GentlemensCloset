<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAGQAAABkCAYAAABw4pVUAAAABGdBTUEAALGPC/xhBQAAA3RJREFUeF7t
        21FqHFcUBFCtI8aEZDkhuzVZTkLIRuSRfbg/rSHjptRTmHugf6o19UrvT0J6WWuttdZaz/T6+vrn7fnn
        9qwf8/ft+cM15txK//tWv8741zXmKF4nucYcvesk15ijt455Q1zHvBy9dcwb4jrm5eitY94Q1zEvR28d
        84a4jnk5euuYN8R1zMvRW8e8Ia5jXo7eOuYNcR3zcvTWMW+I65iXo7eOeUNcx7wcvXXMG+I65uXorWPe
        ENcxL0dvHfOGuI55OXrrmDfEdczL0VvHvCGuY16O3jrmDXEd83L01jFviOuYl6O3jnlDXMe8HL11zBvi
        Oubl6K1j3hDXMS9Hbx3zhriOeTl665g3xHXMy9Fbx7whrmNejt465g1xHfNy9NYxb4jrmJejt455Q1zH
        vBy9dcwb4jrm5ei90pfb89vt+f32/PUWvMe8IX7PQ30fxbwcvVf67Oi3s3/9Hh35kiF+z0N9H8XROXov
        49ghPvB6iA+8HuLLODZH72UcO8QHXg/xgddDfBnH5ui9jGOH+MDrIT7weogv49gcvZdx7BAfeD3EB14P
        8WUcm6P3Mo4d4gOvh/jA6yG+jGNz9F7GsUN84PUQH3g9xJdxbI7eK31y9NvZn79HR75kiN/zUN9HcXSO
        3iu9/SD3y+35dHtSPxj+b99HMS9Hbx3zhriOeTl665g3xHXMy9Fbx7whrmNejt465g1xHfNy9NYxb4jr
        mJejt455Q1zHvBy9dcwb4jrm5eitY94Q1zEvR28d84a4jnk5euuYN8R1zMvRW8e8Ia5jXo7eOuYNcR3z
        cvTWMW+I65iXo7eOeUNcx7wcvXXMG+I65uXorWPeENcxL0dvHfOGuI55OXrrmDfEdczL0TvE6w7XNMQ5
        eod43eGahjhH7xCvO1zTEOfoHeJ1h2sa4hy96yTXmKN3neQac/Q2eup/Rj3KNebobfTU/4x6lIk5ehs9
        9W92H2Vijt5GT/2b3Ue5xhy96yTXmKN3neQac/QO8brDNQ1xjt4hXne4piHO0TvE6w7XNMQ5eod43eGa
        hjhH7zrJNeboXSe5xhy9jfZ3WWX2d1ll9ndZZfZ3WevHucYcvesk15ijd53kGnP0rpNcY47edZJrzNG7
        TnKNOXof5mM/Ld/mw3wsR+/DfOyn5dt8mI+ttdZaa60neHn5Crf1Y9y8vGKeAAAAAElFTkSuQmCC
</value>
  </data>
  <metadata name="timer1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
</root>